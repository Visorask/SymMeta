#!/usr/bin/env bash


##############################
##                          ##
##       Requirements       ##
##                          ##
##############################

# Detect the platform.
osDetect() {
OS="`uname`"
case $OS in
  Linux)
    OS='linux'
    ;;
  *)
    echo 'Download the proper release from https://github.com/sharkdp/fd/releases/latest'
    exit 2
    ;;
esac

OS_type="`uname -m`"
case $OS_type in
  x86_64|amd64)
    OS_type='amd64'
    ;;
  *)
    echo 'Download the proper release from https://github.com/sharkdp/fd/releases/latest'
    exit 2
    ;;
esac
}

# Detect if fd is installed.
fdDetect() {
if [[ -x "/usr/bin/fd" ]]; then
  echo "You already have fd installed."
else
  FDVERS=`fd -V`
   export VERSION=$(curl -s "https://github.com/sharkdp/fd/releases/latest" | grep -oP '(?<=tag/v).*' | cut -d'"' -f1)
   curl -L https://github.com/sharkdp/fd/releases/download/v"$VERSION"/fd_"$VERSION"_amd64.deb
   sudo dpkg -i fd_"$VERSION"_amd64.deb
   echo "$FDVERS is now installed."
fi
}

# Detect if cloudplow is installed.
cloudplowDetect() {
if [[ -d "/opt/cloudplow" ]]; then
  echo "Cloudplow is already installed."
else
  echo "Cloudplow is necessary for bif_upload. You can find the release here: https://github.com/l3uddz/cloudplow#installation" 
fi
}


##############################
##                          ##
##        Bash YAML         ##
##                          ##
##############################

parse_yaml() {
    local yaml_file=$1
    local prefix=$2
    local s
    local w
    local fs

    s='[[:space:]]*'
    w='[a-zA-Z0-9_.-]*'
    fs="$(echo @|tr @ '\034')"

    (
        sed -e '/- [^\â€œ]'"[^\']"'.*: /s|\([ ]*\)- \([[:space:]]*\)|\1-\'$'\n''  \1\2|g' |

        sed -ne '/^--/s|--||g; s|\"|\\\"|g; s/[[:space:]]*$//g;' \
            -e "/#.*[\"\']/!s| #.*||g; /^#/s|#.*||g;" \
            -e "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
            -e "s|^\($s\)\($w\)${s}[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" |

        awk -F"$fs" '{
            indent = length($1)/2;
            if (length($2) == 0) { conj[indent]="+";} else {conj[indent]="";}
            vname[indent] = $2;
            for (i in vname) {if (i > indent) {delete vname[i]}}
                if (length($3) > 0) {
                    vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
                    printf("%s%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, conj[indent-1],$3);
                }
            }' |

        sed -e 's/_=/+=/g' |

        awk 'BEGIN {
                FS="=";
                OFS="="
            }
            /(-|\.).*=/ {
                gsub("-|\\.", "_", $1)
            }
            { print }'
    ) < "$yaml_file"
}

create_variables() {
    local yaml_file="$1"
    local prefix="$2"
    eval "$(parse_yaml "$yaml_file" "$prefix")"
}